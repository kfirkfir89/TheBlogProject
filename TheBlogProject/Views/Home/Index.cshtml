@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using TheBlogProject.Data
@using Microsoft.AspNetCore.Identity;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using System.Drawing



@inject UserManager<BlogUser> userManager
@inject IImageService imageService
@inject ApplicationDbContext _context

@model IEnumerable<TheBlogProject.Models.Post>

<input id="btnGet" type="button" value="Upload" class="btn btn-primary" />
<div class="row row-cols-1">

    @{ var counter = 0;

    }
    @foreach (var post in Model)
    {
        //Is the logged in user the Author of this post??
        var isAuthor = false;

        if (User.Identity.IsAuthenticated)
        {
            isAuthor = (post.BlogUserId == userManager.GetUserId(User));
        }

        <div class="postCard col" style="padding:0px;" id="@($"postCard{counter}")">
            @*-------------   Post card   ------------*@
            <div class="card bg-transparent border-0 mb-3" style="padding:0px;">
                <div class="card-body bg-white rounded-top" style="margin-top: 1px; padding: 5px;">
                    @*-------------   User info   ------------*@
                    @{
                        var blogUser = await userManager.FindByIdAsync(post.BlogUserId);
                        var user = await userManager.FindByIdAsync(userManager.GetUserId(User));
                    }

                    <div class="d-flex d-inline-block px-2 pt-1">
                        @if (User.Identity.IsAuthenticated)
                        {
                        }
                        <img src="@imageService.DecodeImage(blogUser.ImageData, blogUser.ContentType)" alt="@blogUser.FullName" class="m-1 rounded-pill img-thumbnail " style="width:40px; height:40px;">
                        <div class="d-flex flex-column m-1 flex-grow-1">
                            <a asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blogUser.Id" class="smallFont pt-2" style=" line-height: 10px;">@blogUser.FullName</a>

                            @if (post.Updated is not null)
                            {
                                <span class="smallFont text-muted fw-lighter fst-italic">Updated : @post.Updated?.ToString("MMM dd, yyyy")</span>
                            }
                            else
                            {
                                <span class="smallFont text-muted fw-lighter fst-italic">@post.Created.ToString("MMM dd, yyyy")</span>
                            }
                        </div>
                        @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                        {
                            <div class="d-flex justify-content-end">
                                <button class="btn btn-primary logoutButton bg-white">
                                    <a class="justify-content-center" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">
                                        <i class="fa-regular fa-pen-to-square fa-2x px-2"></i>
                                    </a>
                                </button>
                            </div>
                        }
                    </div>

                    @*-------------   Title   ------------*@
                    <a asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                        <div id="@($"postTitle{counter}")" class="postTitle card-title ps-3 h1">@post.Title</div>
                        <p class="card-text ps-3 m-0">@post.Abstract</p>
                    </a>

                    @*-------------   TAGS   ------------*@
                    <div class="card-header bg-white m-0 border-0">
                        @foreach (var tag in post.Tags.ToList())
                        {
                            <button class="btn btn-outline-primary d-inline-flex flex-nowrap justify-content-center p-0 m-0 rounded">
                                <a asp-controller="Posts" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" class="container-fluid d-flex flex-nowrap tagViewB" style="width:100%;">#@tag.Text</a>
                            </button>
                        }
                    </div>
                </div>

                @*-------------   Post Image   ------------*@
                @if (post.ImageData != null)
                {
                    <a asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                        <img id="@($"postImage{counter}")" src="@imageService.DecodeImage(post.ImageData, post.ContentType)" class="imgSetup card-img-top img-fluid p-0 m-0" alt="image">
                    </a>
                    MemoryStream imageStream = new MemoryStream(post.ImageData);
                    Bitmap image = new Bitmap(imageStream);
                    int width = image.Width;
                    int height = image.Height;

                    if (width < 744)
                    {
                        <script>
                           console.log("katannn m800");
                           document.getElementById("@($"postImage{counter}")").classList.add("imgSmall");

                        </script>
                    }
                    else if (width >= 1024 && height >= 768)
                    {
                        <script>
                           document.getElementById("@($"postImage{counter}")").classList.add("imgBig");
                        </script>
                    }
                }

                @*-------------   Post footer buttons   ------------*@
                <div class="card-footer d-flex flex-column p-0 m-0 border-0 bg-white rounded-bottom">
                    <div>like useful view comments</div>
                    <div class="btn-group d-flex flex-nowrap">

                        @if (User.Identity.IsAuthenticated)
                        {
                            if (post.Likes != null)
                            {
                                bool contain = false;
                                foreach (var item in post.Likes)
                                {
                                    if (item == user.Id)
                                    {
                                        contain = true;
                                    }
                                }
                                if (contain is true)
                                {
                                    <button class="btn btn-primary postButtonRight">
                                        <a id="@($"likeBtn{counter}")" class="likeBtn d-flex flex-nowrap justify-content-center" title="Like" data-slug="@post.Slug">
                                            <i class="fa-solid fa-thumbs-up fa-xl align-self-center"></i>
                                        </a>
                                    </button>

                                }
                                else
                                {
                                    <button class="btn btn-primary postButtonRight">
                                        <a id="@($"likeBtn{counter}")" class="likeBtn d-flex flex-nowrap justify-content-center" title="Like" data-slug="@post.Slug">
                                            <i class="fa-solid fa-thumbs-up fa-xl align-self-center"></i>
                                        </a>
                                    </button>
                                }
                            }
                            else
                            {
                                <button class="btn btn-primary postButtonRight">
                                    <a id="@($"likeBtn{counter}")" class="likeBtn d-flex flex-nowrap justify-content-center" title="Like" data-slug="@post.Slug">
                                        <i class="fa-regular fa-thumbs-up fa-xl align-self-center"></i>
                                    </a>
                                </button>
                            }

                            if (post.UsefulCodes != null)
                            {
                                bool contain = false;
                                foreach (var item in post.UsefulCodes)
                                {
                                    if (item == user.Id)
                                    {
                                        contain = true;
                                    }
                                }
                                if (contain is true)
                                {
                                    <button class="btn btn-primary postButtonMiddle">
                                        <a id="@($"UsefulBtn{counter}")" class="usefulBtn d-flex flex-nowrap justify-content-center" title="Useful Code" data-slug="@post.Slug">
                                            <i class="fa-solid fa-file-code fa-xl align-self-center"></i>
                                        </a>
                                    </button>

                                }
                                else
                                {
                                    <button class="btn btn-primary postButtonMiddle">
                                        <a id="@($"UsefulBtn{counter}")" class="usefulBtn d-flex flex-nowrap justify-content-center" title="Useful Code" data-slug="@post.Slug">
                                            <i class="fa-regular fa-file-code fa-xl align-self-center"></i>
                                        </a>
                                    </button>
                                }
                            }
                            else
                            {
                                <button class="btn btn-primary postButtonMiddle">
                                    <a id="@($"UsefulBtn{counter}")" class="usefulBtn d-flex flex-nowrap justify-content-center" title="Useful Code" data-slug="@post.Slug">
                                        <i class="fa-regular fa-file-code fa-xl align-self-center"></i>
                                    </a>
                                </button>
                            }

                            <button class="btn btn-primary postButtonLeft">
                                <a class="d-flex flex-nowrap justify-content-center" title="Like" asp-controller="Posts" asp-action="Details" asp-fragment="commentSection" asp-route-slug="@post.Slug">
                                    <i class="fa-regular fa-comments fa-xl align-self-center"></i>
                                </a>
                            </button>

                        }
                        else
                        {

                            <button class="btn btn-primary postButtonRight" title="Like">
                                <a class="d-flex flex-nowrap justify-content-center" asp-area="Identity" asp-page="/Account/Login">
                                    <i class="fa-regular fa-thumbs-up fa-xl align-self-center"></i>
                                </a>
                            </button>

                            <button class="btn btn-primary postButtonMiddle" title="Useful Code">
                                <a class="d-flex flex-nowrap justify-content-center" asp-area="Identity" asp-page="/Account/Login">
                                    <i class="fa-regular fa-file-code fa-xl align-self-center"></i>
                                </a>
                            </button>

                            <button class="btn btn-primary postButtonLeft" title="Comments">
                                <a class="d-flex flex-nowrap justify-content-center" asp-area="Identity" asp-page="/Account/Login">
                                    <i class="fa-regular fa-comments fa-xl align-self-center"></i>
                                </a>
                            </button>

                        }


                    </div>
                </div>
            </div>
        </div>
        counter++;
    }
</div>

<hr />
@*

    <div class="row">
        <div class="col h3">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <!--    Page List Core    -->
    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    </div>
*@




@section Scripts {

    <script>

         $(document).ready(function () {

             $(".likeBtn").click(function () {
@*                 var postTitle = $(".postTitle").on(function () {

                     this.id;
                 });*@
                 var $el = $(this);
                 var slug = $el.data('slug');
                 let modalId = $(this).attr('id');

                 console.log($el.data('slug'));
                 console.log("ziki zuki `` ose string"+`@counter`);
                 $.ajax({

                    type: "POST",
                    url: "@Url.Action("Like")",
                     data: { slug: slug },
                    dataType: "json",
                     success: function (result) {
                         console.log(result);

                         var modalAnchor = document.getElementById(modalId);
                         var icon = modalAnchor.firstElementChild;

                         if (icon.classList.contains("fa-regular")) {
                             icon.classList.remove("fa-regular");
                             icon.classList.add("fa-solid");
                         } else if (icon.classList.contains("fa-solid")) {
                             icon.classList.remove("fa-solid");
                             icon.classList.add("fa-regular");
                         }
                     },
                    error: function (req, status, error) {
                        console.log(status)
                    }
                });
             });

             $(".usefulBtn").click(function () {
@*                 var postTitle = $(".postTitle").on(function () {

                     this.id;
                 });*@
                 var $el = $(this);
                 var slug = $el.data('slug');
                 let modalId = $(this).attr('id');

                 console.log($el.data('slug'));
                 console.log("ziki zuki `` ose string"+`@counter`);

                 $.ajax({

                    type: "POST",
                    url: "@Url.Action("UsefulCode")",
                     data: { slug: slug },
                    dataType: "json",
                    success: function (result) {
                        console.log(result);
                        var modalAnchor = document.getElementById(modalId);
                        var icon = modalAnchor.firstElementChild;

                        if (icon.classList.contains("fa-regular")) {
                            icon.classList.remove("fa-regular");
                            icon.classList.add("fa-solid");
                        } else if (icon.classList.contains("fa-solid")) {
                            icon.classList.remove("fa-solid");
                            icon.classList.add("fa-regular");
                        }
                    },
                    error: function (req, status, error) {
                        console.log(status)
                    }
                });
             });


         })

    </script>
}

