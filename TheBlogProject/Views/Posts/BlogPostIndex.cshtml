@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using Microsoft.AspNetCore.Identity;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using System.Drawing


@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@model IPagedList<Post>



<div class="row row-cols-1">

    @{ var counter = 0; }
    @foreach (var post in Model)
    {
        //Is the logged in user the Author of this post??
        var isAuthor = false;


        MemoryStream imageStream = new MemoryStream(post.ImageData);
        Bitmap image = new Bitmap(imageStream);
        int width = image.Width;
        int height = image.Height;

        if (width < 800)
        {
          <script>console.log("katannn m800");</script>
        }

        
        
        if (User.Identity.IsAuthenticated)
        {
            isAuthor = (post.BlogUserId == userManager.GetUserId(User));
        }

        <div class="col">

            <div class="card text-center bg-backgroundGray-color mb-2">
                <a asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                    <img id="@($"postImage{counter}")" onload="imgSize(@($"postImage{counter}"))" src="@imageService.DecodeImage(post.ImageData, post.ContentType)" class="imgSetup card-img-top img-fluid p-0 m-0 shadow-sm" alt="image">
                </a>
                <div class="card-body bg-white shadow-sm">
                    <h5 class="card-title">@post.Title</h5>
                    <p class="card-text p-0 m-0">@post.Abstract</p>
                    <a href="#" class="btn btn-primary">Go somewhere</a>
                </div>
                <div class="card-header bg-white border-top border-1 p-0 m-0 shadow-sm">
                    @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                    {
                        <div class="text-center">
                            <a class="btn btn-success btn-sm btn-block border-dark" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">Edit Post</a>
                        </div>
                    }
                    tags
                </div>
                <div class="card-footer text-muted p-0 m-0 shadow-sm" style="background-color: var(--blueDark-color); width: 100%;">
                    <span>like</span>
                </div>
            </div>
        </div>

        counter++;
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<!--    Page List Core    -->
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </div>
</div>


<script src="~/js/Custom.js"></script>
