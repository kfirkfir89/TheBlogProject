@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using Microsoft.AspNetCore.Identity;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using System.Drawing


@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@model IEnumerable<TheBlogProject.Models.Post>


<div class="row row-cols-1">

    @{ var counter = 0; }
    @foreach (var post in Model)
    {
        //Is the logged in user the Author of this post??
        var isAuthor = false;

        if (User.Identity.IsAuthenticated)
        {
            isAuthor = (post.BlogUserId == userManager.GetUserId(User));
        }

        <div class="col">

            <div class="card bg-transparent border-0 mb-2 rounded">
                @if (post.ImageData != null)
                {
                    <a asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                        <img id="@($"postImage{counter}")" src="@imageService.DecodeImage(post.ImageData, post.ContentType)" class="imgSetup card-img-top img-fluid p-0 m-0 shadow-sm" alt="image">
                    </a>
                    MemoryStream imageStream = new MemoryStream(post.ImageData);
                    Bitmap image = new Bitmap(imageStream);
                    int width = image.Width;
                    int height = image.Height;

                    if (width < 744)
                    {
                        <script>
                          console.log("katannn m800");
                          document.getElementById("@($"postImage{counter}")").classList.add("imgSmall");

                        </script>
                    }
                }
                <div class="card-body bg-white shadow-sm">
                    <a asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                        <h5 class="card-title">@post.Title</h5>
                    </a>
                    <a asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                        <p class="card-text p-0 m-0">@post.Abstract</p>
                    </a>
                    <a href="#" class="btn btn-primary">
                        @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                        {
                            <div class="text-center">
                                <a class="btn btn-success btn-sm btn-block border-dark" asp-action="Edit" asp-action="Edit" asp-route-id="@post.Id">Edit Post</a>
                            </div>
                        }
                    </a>
                </div>
                <div class="card-header bg-white p-0 m-0 shadow-sm">
                    @foreach (var tag in post.Tags.ToList())
                    {
                        <button class="btn btn-outline-primary d-inline-flex flex-nowrap justify-content-center p-0 m-0 rounded">
                            <a asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" class="container-fluid d-flex flex-nowrap tagViewB" style="width:100%;">#@tag.Text</a>
                        </button>
                    }
                </div>
                <div class="card-footer p-0 m-0 shadow-sm border-0">
                    <div class="btn-group d-flex flex-nowrap">
                        <button class="btn btn-primary postButtonRight">
                            <a class="justify-content-center" asp-controller="Home" asp-action="Index" title="Manage">
                                <img class="" style="width:100%; height:20px;" src="/assets/img/postIcons/unlike.svg" />
                            </a>
                        </button>
                        <button class="btn btn-primary postButtonleft">
                            <a class="justify-content-center" asp-controller="Home" asp-action="About" title="Manage">
                                <i class="fa-solid fa-book fa-xl" style="color: red;"></i>
                            </a>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        counter++;
    }
</div>

<hr />
@*
    
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<!--    Page List Core    -->
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </div>
</div>
*@
